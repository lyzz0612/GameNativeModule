#!/bin/shecho      "**************************************************************************************************************"echo      "*                                                                                                            *"echo      "*    This tool is: from the full amount of hmsagent code, according to your choice to delete unwanted code   *"echo      "*    Current full code includes games, payments, Huawei ID, social, Push                                     *"echo      "*                                                                                                            *"echo      "*    1. If script execution is unsuccessful due to PC environment problems, open the script with text,       *"echo      "*       and manually delete the related code by script comment                                               *"echo      "*                                                                                                            *"echo      "*    2. Make sure the path to this script does not contain spaces                                            *"echo      "*                                                                                                            *"echo      "*    3. Access to the game must be connected to pay                                                          *"echo      "*                                                                                                            *"echo      "**************************************************************************************************************"function recursive_copy_file(){   dirlist=$(ls "$1")   for name in ${dirlist[*]}   do       if [ -f "$1/$name" ]; then           # If it is a file and the file does not exist in $2, direct copy            if [ ! -f "$2/$name" ]; then                cp "$1/$name" "$2/$name"            fi        elif [ -d "$1/$name" ]; then            # If it is a directory, and the catalog does not exist in $2, create the directory first            if [ ! -d "$2/$name" ]; then                mkdir -p "$2/$name"            fi            # Recursive copy            recursive_copy_file "$1/$name" "$2/$name"        fi    done}# Determine the Java command to use to start the JVM.if [ -n "$JAVA_HOME" ] ; then    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then        # IBM's JDK on AIX uses strange locations for the executables        JAVACMD="$JAVA_HOME/jre/sh/java"    else        JAVACMD="$JAVA_HOME/bin/java"    fi    if [ ! -x "$JAVACMD" ] ; then        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOMEPlease set the JAVA_HOME variable in your environment to match thelocation of your Java installation."    fielse    JAVACMD="java"    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.Please set the JAVA_HOME variable in your environment to match thelocation of your Java installation."fiecho ${JAVACMD} CURPATH="$( cd "$( dirname "$0"  )" && pwd)/"echo "${CURPATH}hmsagents/src/main/java/"MANIFEST_CONFIG_NAME="AppManifestConfig.xml"echo "${CURPATH}config/${MANIFEST_CONFIG_NAME}"rm -rf  "${CURPATH}copysrc"mkdir "${CURPATH}copysrc/"mkdir "${CURPATH}copysrc/java/" recursive_copy_file "${CURPATH}hmsagents/src/main/java/"  "${CURPATH}copysrc/java/" cp "${CURPATH}config/${MANIFEST_CONFIG_NAME}"  "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"echo "Please enter the package name of the application:"read PACKAGE_NAMEif  [ "$PACKAGE_NAME" != "" ] ; then"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m replace  -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "\${PACKAGE_NAME}"  "${PACKAGE_NAME}"fiecho ""echo "Please input AppID from the Developer Consortium (http://developer.huawei.com/consumer/cn) for application assignment AppID:"read APPIDif  [ "$APPID" != "" ] ; then"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m replace  -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "\${APPID}"  "${APPID}"fiecho ""echo "Please enter cpid, from the cpid or payid for application assignment from the Developer Federation (http://developer.huawei.com/consumer/cn):"read CPIDif  [ "$CPID" != "" ] ; then"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m replace    -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "\${CPID}"  "${CPID}"fi"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine   -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "MyApplication""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine   -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "drawable/ic_launcher""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "GameActivity""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "PayActivity""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "HwIDActivity""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "SnsActivity""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock   -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "PushActivity""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m replace  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "package=\"com.huawei.hmsagent\""  """$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m replace   -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "android:name=\"com.huawei.hmsagent.HuaweiPushRevicer\""  "android:name=\"\${Replace the contents of the double quotes here with the receiver class you created}\""NEEDGAME="";NEEDPAY="";NEEDHWID="";NEEDSNS="0";NEEDPUSH="";echo ""if [ "$NEEDGAME" == "" ] ; thenecho "Do you need to integrate 'game' (1 for required, 0 for unwanted):"read NEEDGAMEfi# No integration games are required：if  [ "$NEEDGAME" == "0" ] ; then# Delete com/huawei/android/hms/agent/game folder and content"$JAVACMD"  -jar "${CURPATH}tool/tools.jar"  -m delFile -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/game"# Delete a line in Com/huawei/android/hms/agent/common/apiclientmgr.java that contains ". Game.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  ".game."# Delete rows containing Huaweigame.game_api in Com/huawei/android/hms/agent/common/apiclientmgr.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  "HuaweiGame.GAME_API"# Delete class with name Game in Com/huawei/android/hms/agent/hmsagent.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delBlock -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  "class Game"# Delete a line in Com/huawei/android/hms/agent/hmsagent.java that contains ". Game.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java" ".game."else	NEEDPAY="1";	NEEDHWID="0";fiif [ "$NEEDPAY" == "" ] ; thenecho "Do you need to integrate 'pay' (1 for required, 0 for No):"read NEEDPAYfi# No integration payments are required：if  [ "$NEEDPAY" == "0" ] ; then# Delete Com/huawei/android/hms/agent/pay folder and content"$JAVACMD"  -jar "${CURPATH}tool/tools.jar"  -m delFile -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/pay"# Delete a line in Com/huawei/android/hms/agent/common/apiclientmgr.java that contains ". Pay.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  ".pay."# Delete rows containing Huaweipay.pay_api in Com/huawei/android/hms/agent/common/apiclientmgr.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  "HuaweiPay.PAY_API"# Delete class with name Pay in Com/huawei/android/hms/agent/hmsagent.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delBlock -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  "class Pay"# Delete a line in Com/huawei/android/hms/agent/hmsagent.java that contains ". Pay.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  ".pay."# Only integrated games or payments have cpid"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "cpid""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "pay"fiif [ "$NEEDHWID" == "" ] ; thenecho "Do you need to integrate 'Huawei ID' (1 for required, 0 means not required):"read NEEDHWIDfi# No need to integrate Huawei ID：if  [ "$NEEDHWID" == "0" ] ; then# Delete Com/huawei/android/hms/agent/hwid folder and content"$JAVACMD"  -jar "${CURPATH}tool/tools.jar"  -m delFile -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/hwid"# Delete a line in Com/huawei/android/hms/agent/common/apiclientmgr.java that contains ". Hwid.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  ".hwid."# Delete rows containing huaweiid in Com/huawei/android/hms/agent/common/apiclientmgr.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  "HuaweiId"# Delete class with name Hwid in Com/huawei/android/hms/agent/hmsagent.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delBlock -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  "class Hwid"# Delete a line in Com/huawei/android/hms/agent/hmsagent.java that contains ". Hwid.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  ".hwid."# Delete manifest file hwid configuration"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "account""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "HMSSignInAgentActivity"fiif [ "$NEEDSNS" == "" ] ; thenecho "Do you need to integrate 'sns' (1 for need, 0 for No):"read NEEDSNSfi# No need to integrate sns：if  [ "$NEEDSNS" == "0" ] ; then# Delete Com/huawei/android/hms/agent/sns folder and content"$JAVACMD"  -jar "${CURPATH}tool/tools.jar"  -m delFile -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/sns"# Delete the line in the Com/huawei/android/hms/agent/common/apiclientmgr.java that contains ". Sns.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  ".sns."# Delete rows containing Huaweisns.api in Com/huawei/android/hms/agent/common/apiclientmgr.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  "HuaweiSns.API"# Delete a class named Sns in Com/huawei/android/hms/agent/hmsagent.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delBlock -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  "class Sns"# Delete the line in the Com/huawei/android/hms/agent/hmsagent.java that contains ". Sns.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  ".sns."fiif [ "$NEEDPUSH" == "" ] ; thenecho "Do you need to integrate 'Push' (1 for required, 0 for No):"read NEEDPUSHfi# No integration push is required：if  [ "$NEEDPUSH" == "0" ] ; then# Delete Com/huawei/android/hms/agent/push folder and content"$JAVACMD"  -jar "${CURPATH}tool/tools.jar"  -m delFile -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/push"# Delete the line in the Com/huawei/android/hms/agent/common/apiclientmgr.java that contains ". Push.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  ".push."# Delete rows containing Huaweipush.push_api in Com/huawei/android/hms/agent/common/apiclientmgr.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/common/ApiClientMgr.java"  "HuaweiPush.PUSH_API"# Delete class with name Push in Com/huawei/android/hms/agent/hmsagent.java"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delBlock -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  "class Push"# Delete the line in the Com/huawei/android/hms/agent/hmsagent.java that contains ". Push.""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delLine -codeformat utf-8 -linechar rn  "${CURPATH}copysrc/java/com/huawei/android/hms/agent/HMSAgent.java"  ".push."# Delete manifest file push configuration"$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "PUSH""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "push""$JAVACMD"  -jar "${CURPATH}tool/tools.jar" -m delXmlBlock  -codeformat utf-8 -linechar rn   "${CURPATH}copysrc/${MANIFEST_CONFIG_NAME}"  "Push"fiecho  " "echo " "echo "The copysrc folder in the script sibling is the extracted code, which copies the code in your engineering code"echo  "Press ENTER to exit"read